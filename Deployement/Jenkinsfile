pipeline {
    agent any
    tools {
        maven 'Maven_3'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('employee-docker-token')
        ACR_LOGIN = 'vijayregistryacr.azurecr.io'
        IMAGE_NAME = "vijaylearning/employee-backend"
		 TAG = "${new Date().format('yyyyMMddHHmmss')}"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/vijaylearning/Employee_Backend.git',
                    credentialsId: 'employee-github-token'
            }
        }
        stage('Build with Maven') {
            steps {
                bat 'mvn clean package -DskipTests'
            }
        }
        stage('Build Docker Image') {
            steps {
                bat """
                docker build -t %IMAGE_NAME%:%TAG% -f Deployement/Dockerfile .
                """
            }
        }
        stage('Login to Docker') {
            steps {
                bat """
                echo %DOCKERHUB_CREDENTIALS_PSW% | docker login -u %DOCKERHUB_CREDENTIALS_USR% --password-stdin
                """
            }
        }


        stage('Login to ACR') {
                   steps {
                       withCredentials([usernamePassword(credentialsId: 'vijayazurregistry-token', usernameVariable: 'ACR_USERNAME', passwordVariable: 'ACR_PASSWORD')]) {

                               bat """
                               echo $ACR_PASSWORD | docker login $ACR_LOGIN -u $ACR_USERNAME --password-stdin"
                               echo ✅ ACR logged in successfully
                                """

                       }
                   }
               }
        stage('Push to ACR') {
                  steps {
                      script {
                      bat """

                      docker tag %IMAGE_NAME%:%TAG% vijayregistryacr.azurecr.io/%IMAGE_NAME%:%TAG%
                          docker push $ACR_LOGIN/%IMAGE_NAME%:%TAG%
                          """
                      }
                  }
              }
		stage('Show Tag') {
            steps {
                echo "✅ Docker image pushed as ${IMAGE_NAME}:${TAG}"
            }
        }
    }
}
